package dfs;

/**
깊이 우선 탐색 dfs
 그래프 완전 탐색 기법 중 하나
 시작 노드부터 출발하여 분기를 정하여 최대 깊이까지 탐색을 마친 후 다른 쪽 분기로 이동하여 탐색

 특징 : 재귀 함수로 구현 , 스택 자료구조 이용
 filo -> 재귀 함수로 보통 구현
 시간 복잡도: 노드수 + 에지 수
 단절점 찾기 ,단절선 찾기 ,사이클 찾기 , 위상 정렬등
 방문한 노드를 다시방문하면 안됨 노드 방문 여부 체크 할 배열 필요
 그래프 -> 인접 리스트

 dfs 시작할 노드 정하고 사용할 자료 구조 초기화 (인접리스트)

 1 -> 2 -> 5                           1 -> 2 3           1에서 갈수있는 23 엣지가있음            방문 배열       1 2 3 4 5 6       스택
 -    -  ->  -                         2 - > 56                                                          t f f f f f          1
 3  ->  4  -> 6                        3 -> 4
                                       4-> 6
                                       5
                                       6


 1 꺼니고 스택에서 인접리스트에 있는 23을 넣음                                스택              방문배열        1 2 3 4 5 6
                                                                    3                             t t t f f f
                                                                    2


스택 자료구조에 값이 없을떄까지 반복

 다녀간 노드는 방문 배열을 바탕으로 재삽입 하지 않는게 핵심

 다음 3 꺼내고 4 넣고
  4를 넣고 뽑고 6을 넣고
 삽입 연산 은 없고 이후에 뺴고
 2넣고 뺴고 5넣고 뺸다                  다 지나고나면 방문배열 전부 t로 됨

 탐색 순서 1->3 4-> 6 -> 2 -> 5

 깊이 끝까지 들어가고 나돌고 위쪽으로 올라옴


 **/
public class dfs {
}
